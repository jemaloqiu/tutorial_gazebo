<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find tutorial_gazebo)/launch/empty_world.launch">
    <arg name="world_name" value="$(find tutorial_gazebo)/worlds/myfactory.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="$(find xacro)/xacro.py '$(find tutorial_gazebo)/urdf/forktruck.urdf.xacro'" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model forktruck -param robot_description"/>


 <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find tutorial_gazebo)/config/forktruck.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/" args="joint_state_controller joint1_position_controller joint2_position_controller joint3_position_controller joint4_position_controller"/>

   <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
</launch>

