<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find tutorial_gazebo)/launch/empty_world.launch">
    <arg name="world_name" value="$(find tutorial_gazebo)/worlds/inria.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
	 command="$(find xacro)/xacro.py '$(find tutorial_gazebo)/urdf/wifibot_kinect.urdf.xacro'" />
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model wifibot -param robot_description"/>

   <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

<!-- define a frame for kinect depth topics-->
<node pkg="tf" type="static_transform_publisher" name="kinect_image_camera_tf" args="0 0 0 -1.58 0 -1.58 /camera_pod_link /kinect_image_frame 100"/>




</launch>

